[package]
name = "r3_port_riscv_test_driver"
version = "0.0.0"
edition = "2021"
license = "MIT OR Apache-2.0"
publish = false

[features]
kernel_benchmarks = ["run"]
kernel_tests = ["run"]
run = [
    "r3_test_suite",
    "r3_port_riscv",
    "r3_portkit",
    "r3",
    "riscv",
    "log",
]

# --------------------------------------------------------------------

# Minimal startup code that relies on a bootloader to
# load all sections and assumes S-mode
boot-minimal-s = []
# Use `riscv-rt` for the startup code
boot-rt = [
    "r3_port_riscv/riscv-rt",
    "riscv-rt",
]

# --------------------------------------------------------------------

output-rtt = [
    "rtt-target",
]
output-e310x-uart = [
    "e310x-hal",
    "output-uart",
    "nb",
]
output-u540-uart = [
    "output-uart"
]
output-k210-uart = [
    "k210-hal",
    "output-uart",
    "nb",
]
output-uart = []

# --------------------------------------------------------------------

interrupt-e310x = [
    "e310x",
]
interrupt-u540-qemu = []
interrupt-k210 = []

# --------------------------------------------------------------------

board-e310x-red-v = [
    "e310x-hal",
]
board-e310x-qemu = [
    "e310x-hal",
]
board-u540-qemu = []
board-maix = []

# --------------------------------------------------------------------

timer-clint = []
timer-sbi = []

# --------------------------------------------------------------------

[dependencies]
r3_port_riscv = { path = "../r3_port_riscv", optional = true }
r3_portkit = { path = "../r3_portkit", optional = true }
r3 = { path = "../r3", optional = true }

rtt-target = { version = "0.3.0", optional = true, features = ["riscv"] }
e310x-hal = { version = "0.9.0", optional = true, features = ["g002"] }
k210-hal = { version = "0.2.0", optional = true }
riscv-rt = { version = ">= 0.6.0, < 0.9.0", optional = true }
e310x = { version = "0.9.0", optional = true }
riscv = { version = "0.7.0", optional = true, features = ["inline-asm"] }
# FIXME: We work around <https://github.com/rust-embedded/riscv/issues/69> by enabling
#        `riscv/inline-asm`. Without this feature, `riscv` uses a precompiled object file, which may
#        be rejected by the linker because of a floating-point ABI mismatch. Although this is fixed
#        in `riscv ^0.7`, the prospect of `riscv ^0.5` receiving the fix is pretty low. We need to
#        wait for `k210-pac` to stop using `riscv ^0.5`.
riscv_0p5 = { version = "0.5.0", package = "riscv", optional = true, features = ["inline-asm"] }
log = { version = "0.4.8", optional = true }
nb = { version = "1.0.0", optional = true }

[dependencies.r3_kernel]
path = "../r3_kernel"
features = [
    # enable all of the kernel optional features
    "full",
]

[dependencies.r3_test_suite]
path = "../r3_test_suite"
default-features = false
features = [
    # compile the test case specified by `R3_TEST`
    "tests_selective",
    # use all kernel optional features known by `r3_test_suite`
    "full",
]
optional = true
