[package]
name = "r3_port_arm_m_test_driver"
version = "0.0.0"
publish = false

edition.workspace = true
license.workspace = true
repository.workspace = true

[features]
kernel_benchmarks = ["run"]
kernel_tests = ["run"]
run = [
    "r3",
    "r3_port_arm_m",
    "cortex-m",
    "cortex-m-rt",
    "log",
    "r3_test_suite",
]

# Only Raspberry Pico needs special support. `board-rp_pico` implies USB output,
# so it doesn't require `output-*`.
board-rp_pico = [
    "r3_support_rp2040",
    "rp2040-pac",
]

# Other targets specify a generic output mechanism
output-rtt = [
    "panic-rtt-target",
    "rtt-target",
]
output-semihosting = [
    "cortex-m-semihosting",
    "panic-semihosting",
]

cpu-lock-by-basepri = []

[dependencies]
r3_support_rp2040 = { workspace = true, optional = true, features = ["semver-exempt"] }
r3_port_arm_m = { workspace = true, optional = true }
r3 = { workspace = true, optional = true }

cortex-m-semihosting = { version = "0.5.0", optional = true }
panic-semihosting = { version = "0.6.0", optional = true }
panic-rtt-target = { version = "0.1.2", optional = true, features = ["cortex-m"] }
cortex-m-rt = { version = "0.6.12", optional = true, features = ["device"] }
rp2040-pac = { version = "0.4.0", optional = true }
rtt-target = { version = "0.3.0", optional = true, features = ["cortex-m"] }
cortex-m = { version = "0.7.3", optional = true, features = ["inline-asm"] }
log = { version = "0.4.8", optional = true }

[dependencies.r3_kernel]
workspace = true
features = [
    # enable all of the kernel optional features
    "full",
]

[dependencies.r3_test_suite]
workspace = true
features = [
    # compile the test case specified by `R3_TEST`
    "tests_selective",
    # use all kernel optional features known by `r3_test_suite`
    "full",
]
optional = true
